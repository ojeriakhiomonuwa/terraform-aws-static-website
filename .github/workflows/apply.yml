#YAML file to automate Terraform deployment using GitHub Actions
name: Terraform CI/CD
# Trigger the workflow on push to main branch
on:
  push:
    branches:
      - main
# Ensure only one run at a time to prevent state conflicts
concurrency:
  group: terraform-state
  cancel-in-progress: true

# Define the job to run
jobs:
  terraform:
    name: Terraform Plan & Apply
    runs-on: ubuntu-latest
# Set environment variables for AWS credentials
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: us-east-1 # update if different
      ACM_CERT_ARN: ${{ secrets.ACM_CERT_ARN }} # ARN of your ACM certificate
# Define the steps to execute
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        working-directory: ./Static-website
        run: terraform init

      - name: Terraform Format Check
        working-directory: ./Static-website
        run: terraform fmt -check

      - name: Terraform Validate
        working-directory: ./Static-website
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./Static-website
        run: terraform plan -out=tfplan \
             -var="acm_certificate_arn=${{ secrets.ACM_CERT_ARN }}" \
             -var-file="terraform.tfvars"



      - name: Terraform Apply
        working-directory: ./Static-website
        run: terraform apply -auto-approve tfplan 